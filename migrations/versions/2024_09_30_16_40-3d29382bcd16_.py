"""empty message

Revision ID: 3d29382bcd16
Revises:
Create Date: 2024-09-30 16:40:35.570875

"""

import aiogram.types.birthdate
import aiogram.types.business_intro
import aiogram.types.business_location
import aiogram.types.business_opening_hours
import aiogram.types.chat
import aiogram.types.chat_location
import aiogram.types.chat_permissions
import aiogram.types.chat_photo
import aiogram.types.message
import aiogram.types.reaction_type
import sqlalchemy as sa
from alembic import op

from djgram.db.pydantic_field import ImmutablePydanticField, PydanticField

# revision identifiers, used by Alembic.
revision = "3d29382bcd16"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "telegramchat",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("is_forum", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "telegramchatfullinfo",
        sa.Column("accent_color_id", sa.Integer(), nullable=False),
        sa.Column("max_reaction_count", sa.Integer(), nullable=False),
        sa.Column("photo", ImmutablePydanticField(aiogram.types.chat_photo.ChatPhoto), nullable=True),
        sa.Column("active_usernames", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("birthdate", ImmutablePydanticField(aiogram.types.birthdate.Birthdate), nullable=True),
        sa.Column("business_intro", ImmutablePydanticField(aiogram.types.business_intro.BusinessIntro), nullable=True),
        sa.Column(
            "business_location",
            ImmutablePydanticField(aiogram.types.business_location.BusinessLocation),
            nullable=True,
        ),
        sa.Column(
            "business_opening_hours",
            ImmutablePydanticField(aiogram.types.business_opening_hours.BusinessOpeningHours),
            nullable=True,
        ),
        sa.Column("personal_chat", ImmutablePydanticField(aiogram.types.chat.Chat), nullable=True),
        sa.Column(
            "available_reactions",
            sa.ARRAY(ImmutablePydanticField(aiogram.types.reaction_type.ReactionType)),
            nullable=True,
        ),
        sa.Column("background_custom_emoji_id", sa.String(), nullable=True),
        sa.Column("profile_accent_color_id", sa.Integer(), nullable=True),
        sa.Column("profile_background_custom_emoji_id", sa.String(), nullable=True),
        sa.Column("emoji_status_custom_emoji_id", sa.String(), nullable=True),
        sa.Column("emoji_status_expiration_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("has_private_forwards", sa.Boolean(), nullable=True),
        sa.Column("has_restricted_voice_and_video_messages", sa.Boolean(), nullable=True),
        sa.Column("join_to_send_messages", sa.Boolean(), nullable=True),
        sa.Column("join_by_request", sa.Boolean(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("invite_link", sa.String(), nullable=True),
        sa.Column("pinned_message", ImmutablePydanticField(aiogram.types.message.Message), nullable=True),
        sa.Column("permissions", PydanticField(aiogram.types.chat_permissions.ChatPermissions), nullable=True),
        sa.Column("can_send_paid_media", sa.Boolean(), nullable=True),
        sa.Column("slow_mode_delay", sa.Integer(), nullable=True),
        sa.Column("unrestrict_boost_count", sa.Integer(), nullable=True),
        sa.Column("message_auto_delete_time", sa.Integer(), nullable=True),
        sa.Column("has_aggressive_anti_spam_enabled", sa.Boolean(), nullable=True),
        sa.Column("has_hidden_members", sa.Boolean(), nullable=True),
        sa.Column("has_protected_content", sa.Boolean(), nullable=True),
        sa.Column("has_visible_history", sa.Boolean(), nullable=True),
        sa.Column("sticker_set_name", sa.String(), nullable=True),
        sa.Column("can_set_sticker_set", sa.Boolean(), nullable=True),
        sa.Column("custom_emoji_sticker_set_name", sa.String(), nullable=True),
        sa.Column("linked_chat_id", sa.Integer(), nullable=True),
        sa.Column("location", ImmutablePydanticField(aiogram.types.chat_location.ChatLocation), nullable=True),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("is_forum", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "telegramuser",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("is_bot", sa.Boolean(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("language_code", sa.String(), nullable=True),
        sa.Column("is_premium", sa.Boolean(), server_default=sa.text("false"), nullable=True),
        sa.Column("added_to_attachment_menu", sa.Boolean(), server_default=sa.text("false"), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("banned", sa.Boolean(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("telegram_user_id", sa.BigInteger(), nullable=False),
        sa.Column("first_seen", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("last_interaction", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(["telegram_user_id"], ["telegramuser.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user")
    op.drop_table("telegramuser")
    op.drop_table("telegramchatfullinfo")
    op.drop_table("telegramchat")
    # ### end Alembic commands ###
