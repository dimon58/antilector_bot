"""Added lecture summary model

Revision ID: d7dc6fc988ae
Revises: 3b181e92c408
Create Date: 2024-10-20 00:32:06.732982

"""

import sqlalchemy as sa
from alembic import op
from djgram.db.pydantic_field import ImmutablePydanticField
from sqlalchemy_file import FileField
import aiogram.types.document
import processing.models.common
import processing.models.lecture_summary
import sqlalchemy.sql.sqltypes

# revision identifiers, used by Alembic.
revision = "d7dc6fc988ae"
down_revision = "3b181e92c408"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lecturesummary",
        sa.Column("original_video_id", sa.String(), nullable=False),
        sa.Column("transcription_text", sa.String(), nullable=True),
        sa.Column(
            "stats",
            ImmutablePydanticField(
                processing.models.lecture_summary.SummarizationStats,
                sqlalchemy.sql.sqltypes.JSON(),
                should_frozen=False,
            ),
            nullable=False,
        ),
        sa.Column("latex", sa.String(), nullable=True),
        sa.Column("pdf", FileField(), nullable=True),
        sa.Column(
            "telegram_file",
            ImmutablePydanticField(aiogram.types.document.Document, sqlalchemy.sql.sqltypes.JSON(), should_frozen=True),
            nullable=True,
        ),
        sa.Column(
            "waiters",
            sa.ARRAY(
                ImmutablePydanticField(
                    processing.models.common.Waiter, sqlalchemy.sql.sqltypes.JSON(), should_frozen=True
                )
            ),
            server_default="{}",
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["original_video_id"],
            ["video.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_lecturesummary_original_video_id"), "lecturesummary", ["original_video_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_lecturesummary_original_video_id"), table_name="lecturesummary")
    op.drop_table("lecturesummary")
    # ### end Alembic commands ###
