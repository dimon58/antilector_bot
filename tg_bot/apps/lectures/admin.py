"""
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
"""

import json
from typing import Any

from aiogram.enums import ChatAction
from aiogram.types import BufferedInputFile, CallbackQuery
from aiogram.utils.chat_action import ChatActionSender

from djgram.contrib.admin import AppAdmin, ModelAdmin
from djgram.contrib.admin.action_buttons import AbstractObjectActionButton, DownloadJsonActionButton
from djgram.contrib.admin.rendering import OneLineTextRenderer
from processing.models import Playlist, ProcessedVideo, Video, VideoProcessingResourceUsage, YtDlpBase

app = AppAdmin(verbose_name="–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–µ–∫—Ü–∏–π")


class DownloadYtDlpInfoButton(AbstractObjectActionButton):

    async def click(self, obj: YtDlpBase, callback_query: CallbackQuery, middleware_data: dict[str, Any]) -> None:
        async with ChatActionSender(
            bot=callback_query.bot,
            chat_id=callback_query.message.chat.id,
            action=ChatAction.TYPING,
        ):
            await callback_query.message.answer_document(
                document=BufferedInputFile(
                    file=json.dumps(obj.yt_dlp_info, ensure_ascii=False, indent=2).encode("utf8"),
                    filename="yt_dlp_info.json",
                ),
            )


@app.register
class VideoAdmin(ModelAdmin):
    model = Video
    name = "–í–∏–¥–µ–æ"
    list_display = ("call:get_title_for_admin",)
    exclude_fields = (
        "yt_dlp_info",
        "meta",
    )
    object_action_buttons = (
        DownloadJsonActionButton(
            button_id="download_yt_dlp_info",
            title="üì• –ü–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            field_name="yt_dlp_info",
        ),
        DownloadJsonActionButton(
            button_id="download_processing_stats",
            title="üì• –°–∫–∞—á–∞—Ç—å –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ",
            field_name="meta",
        ),
    )
    widgets_override = {
        "id": OneLineTextRenderer,
        "source": OneLineTextRenderer,
    }


@app.register
class PlaylistAdmin(VideoAdmin):
    model = Playlist
    name = "–ü–ª–µ–π–ª–∏—Å—Ç—ã"


@app.register
class ProcessedVideoAdmin(ModelAdmin):
    model = ProcessedVideo
    name = "–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ"
    list_display = ("original_video_id", "audio_processing_profile_id", "unsilence_profile_id")
    exclude_fields = (
        "audio_pipeline_json",
        "unsilence_action_json",
        "processing_stats",
        "meta",
    )
    object_action_buttons = (
        DownloadJsonActionButton(
            button_id="download_audio_pipeline_json",
            title="üì• –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ",
            field_name="audio_pipeline_json",
        ),
        DownloadJsonActionButton(
            button_id="download_unsilence_action_json",
            title="üì• –°–∫–∞—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–∏—Å–∫–∞ —Ç–∏—à–∏–Ω—ã",
            field_name="unsilence_action_json",
        ),
        DownloadJsonActionButton(
            button_id="download_processing_stats",
            title="üìä –°–∫–∞—á–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏",
            field_name="processing_stats",
        ),
        DownloadJsonActionButton(
            button_id="download_meta",
            title="üì• –°–∫–∞—á–∞—Ç—å –º–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ",
            field_name="meta",
        ),
    )


@app.register
class VideoProcessingResourceUsageAdmin(ModelAdmin):
    model = VideoProcessingResourceUsage
    name = "–û–±—Ä–∞–±–æ—Ç–∫–∏"
    list_display = ("user_id", "processed_video_id")
